version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "P@ssw0rd@1"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "P@ssw0rd@1", "-Q", "SELECT 1"]
      interval: 10s
      retries: 5

  init-db:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - sqlserver
    volumes:
      - ./init-db/init.sql:/init.sql
    entrypoint: ["/bin/bash", "-c", "\
      until /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P 'P@ssw0rd@1' -Q 'SELECT 1' > /dev/null 2>&1; do \
        echo 'Waiting for SQL Server to be ready...'; sleep 5; \
      done; \
      /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P 'P@ssw0rd@1' -i /init.sql"]
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: fastapi
    ports:
      - "8000:8000"
    networks:
      - app-network
    environment:
      DB_SERVER: sqlserver
      DB_DATABASE: testdb
      DB_UID: sa
      DB_PWD: P@ssw0rd@1

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    networks:
      - app-network


networks:
  app-network:
    driver: bridge
